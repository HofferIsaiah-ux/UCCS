# QUESTION 1:
set.seed(42)
sample1 = round(rnorm(n=5, mean=100, sd=15))
sample2 = round(rnorm(n=30, mean=100, sd=15))
sample3 = round(rnorm(n=100, mean=100, sd=15))
# Mean Of Samples:
cat("Sample 1: ",mean(sample1)) #Output: Sample 1: 106.6
cat("Sample 2: ",mean(sample2)) #Output: Sample 2: 101
cat("Sample 3: ",mean(sample3)) #Output: Sample 3: 99.19
#Visualizing each sample
#Sample 1
hist(sample1, xlab="IQ")
#Sample 2
hist(sample2, xlab="IQ")
#Sample 3
hist(sample3, xlab="IQ")
# QUESTION 2:
#Sample
examSample = c(72, 85, 91, 88, 76, 95, 89, 84, 77, 90)
# Calculating Confidence Interval
examMean = mean(examSample ) #Mean
cat("Exam Score Mean: ",examMean) #Output: Exam Score Mean: 84.7
examSD = sd(examSample) #Standard Deviation
cat("Exam Standard Deviation: ",examSD) #Output: Exam Standard Deviation: 7.454305
examSampleLength = length(examSample) #Length
alpha = .05
criticalValue = qt(1 - alpha/2, df= examSampleLength - 1) #Critical Value
stdError = examSD / sqrt(examSampleLength) #Standard Error Of Mean
errorMargin = criticalValue * stdError #Margin Of Error
confidenceLower = examMean - errorMargin
confidenceHigher = examMean + errorMargin
cat("95% Confidence Interval:(",confidenceLower,",",confidenceHigher,")") #Output: 95% Confidence Interval:( 79.36751 , 90.03249 )
totalAmount = 120
passedAmount = 96
alpha = .05
#One-Sample Proportion Test
prop.test(passedAmount, totalAmount, p = .75, alternative = "greater", correct = FALSE) #Output:
totalStudents = 100
expectedResults = c(20,30,30,10,10)
actualResults = c(18,29,34,11,8)
chisq.test(x = actualResults, p = expectedResults / totalStudents) #Output:
#QUESTION 5:
hProbability = dbinom(4, size = 10, prob = 0.5) # Gives 0.2050781
cat("Probability to get 4 heads out of 10 tosses:",hProbability*100) #Output: Probability to get 4 heads out of 10 tosses:  20.50781
iq = c(85,115)
iqProbability = pnorm(iq, mean = 100, sd = 15) #Gives 0.1586553 0.8413447
cat("Percentage of IQ's between 85 and 115:",(iqProbability[2]-iqProbability[1])*100) #Output: Percentage of IQ's between 85 and 115: 68.26895
randomValues = rt(1000, df = 10)
hist(randomValues, breaks = 30, main = "Histogram of T-Distibution", xlab = "Values")
#The histogram is bell-shaped and symmetric, like a histogram with a normal distribution
#The histogram is bell-shaped and symmetric, like a histogram with a normal distribution
#but with slightly taller tails. This reflects that with 10 degrees of freedom,
#The histogram is bell-shaped and symmetric, like a histogram with a normal distribution
#but with slightly taller tails. This reflects that with 10 degrees of freedom,
#the t-distribution is close to normal but still is not completely frequent only in one dense area.
savehistory("C:/Users/hoffe/OneDrive - University of Colorado Colorado Springs/csworkspace/CS 2020/RStudio/Assignments/HofferIsaiahAssignment3/Assingment3History.Rhistory")
